Generierung

Die Methode generate(.......):...... lädt alle Module des übergebenen Plans, sowie die bereits bestandenen Module des Users in eine Modulliste. Aus dieser wird ein Abhängigkeitsgraph modeliert: Jedes Modul ist ein Knoten, die Constraints bilden Kanten zwischen den betreffenden Knoten. Module mit „Zusammenhang_Semester“-Constraint werden als ein Knoten dargestellt, „Zusammenhang_Übergreifend“-Constraints werden als gerichtete Kanten mit zufälliger Richtung modelliert und „Voraussetzung“-Constraints als gerichtete Graphen. Module des übergebenen Plans, bestandene Module des Users und Pflichtmodule (unter anderem ausreichend viele Module des Vertiefungsfachs) werden als Knoten eingefügt. Allen enthaltenen Modulen werden rekursiv fehlende Constraints (Modul + Abhängigkeitskante) angefügt. Nach endender Rekursion werden zufällige weitere Module als Knoten eingefügt und die Constraints rekursiv hinzugefügt, bis die Ziel-ECTS-Zahl im Graphen enthalten ist. Der entstandene Graph muss nicht zusammenhän gend, aber azyklisch sein. 
Die Knoten des entstandenen Abhängigkeitsgrafen werden durch Tiefensuche nummeriert. Diese Nummerierung stellt eine topologische Sortierung dar. Beginnend mit dem niedrigwertigsten Knoten werden jetzt aufeinanderfolgende Knoten nebeneinander (→ in ein Semester) geschoben. Dabei dürfen keine Querpfeile entstehen, die Maximal-ECTS-Punkte-Anzahl eines Semesters (→ einer Ebene) darf nicht überschritten werden und es dürfen keine sich überschneidenden Module in eine Ebene ( → ein Semester) gezogen werden. Die Ebenen-Anzahl (→ Semesteranzahl) wird unter Berücksichtigung der Constraints minimiert (der gewünschten Semesteranzahl angenähert).
