// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package edu.kit.informatik.studyplan.server.model.userdata.dao;

import edu.kit.informatik.studyplan.server.model.userdata.User;
import edu.kit.informatik.studyplan.server.model.userdata.authorization.AuthorizationScope;
import edu.kit.informatik.studyplan.server.model.userdata.authorization.RESTClient;

/************************************************************/
/**
 * Diese Klasse ermöglicht die Authentifizierung, indem sie Methoden zur
 * Access-Token-Generierung, sowie zur Abfrage von Authentifizierungs-Kontexten
 * bereitstellt.
 */
public abstract class AbstractSecurityProvider {

	/**
	 * Erzeugt zu einem Nutzer einen neuen Authentifizierungs-Kontext inklusive
	 * Access-Token und speichert diesen in der Datenbank.<br>
	 * Die Gültigkeitsdauer wird auf 4 Stunden gesetzt.
	 * 
	 * @param user
	 *            der User
	 * @param scope 
	 * @return den generierten Authentifizierungs-Kontext
	 */
	public abstract AuthorizationContext generateAuthorizationContext(User user, RESTClient client, AuthorizationScope scope);

	/**
	 * Liefert zu einem Access-Token den enstprechenden
	 * Authentifizierungs-Kontext.<br>
	 * Ist kein Kontext vorhanden, so wird <code>null</code> zurückgegeben.
	 * 
	 * @param accessToken
	 *            der Access-Token
	 * @return der Authentifizierungs-Kontet
	 */
	public abstract AuthorizationContext getAuthorizationContext(String accessToken);

	/**
	 * 
	 * @return gibt eine konkrete SecurityProvider-Implementierung zurück
	 */
	public static final AbstractSecurityProvider getSecurityProviderImpl() {
		return new SecurityProvider();
	}
	
	public abstract RESTClient getClient(String clientId);
	
	@Deprecated
	public abstract void cleanUp();
};
