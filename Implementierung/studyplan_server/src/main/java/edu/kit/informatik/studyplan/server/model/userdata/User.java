// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package edu.kit.informatik.studyplan.server.model.userdata;

import edu.kit.informatik.studyplan.server.model.moduledata.Discipline;
import edu.kit.informatik.studyplan.server.model.moduledata.dao.ModuleDaoFactory;
import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.NaturalId;

import javax.persistence.*;
import java.security.Principal;
import java.util.LinkedList;
import java.util.List;

/************************************************************/
/**
 * Modelliert einen Nutzer.
 */
@Entity
@Table(name = "user")
public class User implements Principal {
	/**
	 * 
	 */
	@Id
	@Column(name = "user_id")
	private int userId;
	/**
	 * 
	 */
	@NaturalId
	@Column(name = "name")
	private String userName;
	/**
	 * 
	 */
	@Column(name = "discipline_id")
	private int disciplineId;

	@Transient
	private Discipline discipline;
	/**
	 * 
	 */
	@Embedded
	private Semester studyStart;
	/**
	 * 
	 */
	@OneToMany
	@Cascade(CascadeType.SAVE_UPDATE)
	@JoinTable(name = "passed_modules", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "entry_id"))
	private List<ModuleEntry> passedModules = new LinkedList<ModuleEntry>();

	@OneToMany(mappedBy = "user")
	private List<Plan> plans = new LinkedList<Plan>();

	/**
	 * 
	 * @return gibt die eindeutige ID des Nutzers zurück
	 */
	public int getUserId() {
		return userId;
	}

	/**
	 * 
	 * @param userId
	 *            Wert, auf den die ID gesetzt wird
	 */
	public void setUserId(int userId) {
		this.userId = userId;
	}

	/**
	 * 
	 * @return gibt den eindeutigen Nutzernamen zurück
	 */
	public String getUserName() {
		return userName;
	}

	/**
	 * 
	 * @param userName
	 *            der Nutzername
	 */
	public void setUserName(String userName) {
		this.userName = userName;
	}

	/**
	 * 
	 * @return gibt den Studiengang zurück
	 */
	public Discipline getDiscipline() {
		if (discipline == null) {
			discipline = ModuleDaoFactory.getModuleDao().getDisciplineById(disciplineId);
		}
		return discipline;
	}

	/**
	 * 
	 * @param discipline
	 *            der Studiengang
	 */
	public void setDiscipline(Discipline discipline) {
		this.disciplineId = discipline.getDisciplineId();
		this.discipline = discipline;
	}

	/**
	 * 
	 * @return gibt das Semester des Studienstarts zurück
	 */
	public Semester getStudyStart() {
		return studyStart;
	}

	/**
	 * 
	 * @param semester
	 *            das Semester des Studienstarts
	 */
	public void setStudyStart(Semester semester) {
		this.studyStart = semester;
	}

	/**
	 * 
	 * @return gibt eine Liste von Modul-Einträgen der bestandenen Module zurück
	 */
	public List<ModuleEntry> getPassedModules() {
		return passedModules;
	}

	/**
	 * 
	 * @return gibt eine Liste der Studienpläne des Nutzers zurück
	 */
	public List<Plan> getPlans() {
		return plans;
	}

	@Override
	@Transient
	public String getName() {
		return getUserName();
	}
};
