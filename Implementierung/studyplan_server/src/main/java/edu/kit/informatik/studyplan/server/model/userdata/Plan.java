// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package edu.kit.informatik.studyplan.server.model.userdata;

import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.GenericGenerator;

import edu.kit.informatik.studyplan.server.model.moduledata.Module;

/************************************************************/
/**
 * Modelliert einen Studienplan
 */
@Entity
@Table(name = "plan")
public class Plan {

	/**
	 * 
	 */
	@Id
	@GenericGenerator(name = "uuid-gen", strategy = "org.hibernate.id.UUIDGenerator")
	@GeneratedValue(generator = "uuid-gen")
	@Column(name = "identifier")
	private String identifier;
	/**
	 * 
	 */

	@Column(name = "name")
	private String name;
	/**
	 * 
	 */
	@Enumerated(EnumType.STRING)
	@Column(name = "state")
	private VerificationState state;
	/**
	 * 
	 */
	@Transient
	private int creditPoints;
	/**
	 * 
	 */
	@ManyToOne
	@JoinColumn(name = "user_id")
	private User user;
	/**
	 * 
	 */
	@OneToMany
	@JoinTable(name = "plan_entries", joinColumns = @JoinColumn(name = "plan_id"), inverseJoinColumns = @JoinColumn(name = "entry_id"))
	private List<ModuleEntry> moduleEntries;
	/**
	 * 
	 */
	@OneToMany(mappedBy = "plan")
	private List<ModulePreference> modulePreferences;

	/**
	 * Gibt für ein übergebenes Modul die Präferenz zurück. <br>
	 * <code>null</code>, falls keine Präferenz vorhanden
	 * 
	 * @return die Präferenz
	 * @param module
	 *            das Modul
	 */
	public PreferenceType getPreferenceForModule(Module module) {
		// TODO: implement
		return null;
	}

	/**
	 * 
	 * @return gibt den eindeutigen Plan-Identifier zurück
	 */
	public String getIdentifier() {
		return identifier;
	}

	/**
	 * 
	 * @param identifier
	 *            der Plan-Identifier
	 */
	public void setIdentifier(String identifier) {
		this.identifier = identifier;
	}

	/**
	 * 
	 * @return gibt den Namen des Plans zurück
	 */
	public String getName() {
		return name;
	}

	/**
	 * 
	 * @param name
	 *            der Name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * 
	 * @return gibt den Verifizierungsstatus des Plans zurück
	 */
	public VerificationState getVerificationState() {
		return state;
	}

	/**
	 * 
	 * @param verificationState
	 *            der Verifizierungsstatus
	 */
	public void setVerificationState(VerificationState verificationState) {
		this.state = verificationState;
	}

	/**
	 * 
	 * @return gibt die ECTS-Summe des Plans zurück
	 */
	public int getCreditPoints() {
		return creditPoints;
	}

	/**
	 * 
	 * @return gibt den Eigentümer des Plans zurück
	 */
	public User getUser() {
		return user;
	}

	/**
	 * 
	 * @param user
	 *            der Eigentümer
	 */
	public void setUser(User user) {
		this.user = user;
	}

	/**
	 * 
	 * @return gibt alle Moduleinträge des Plans zurück
	 */
	public List<ModuleEntry> getModuleEntries() {
		return moduleEntries;
	}

	/**
	 * 
	 * @return gibt eine List der Modulpräferenzen zurück
	 */
	public List<ModulePreference> getPreferences() {
		return modulePreferences;
	}
};
