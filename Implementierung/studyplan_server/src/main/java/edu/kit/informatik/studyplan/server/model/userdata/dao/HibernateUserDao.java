// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package edu.kit.informatik.studyplan.server.model.userdata.dao;

import org.hibernate.Session;

import edu.kit.informatik.studyplan.server.model.HibernateUtil;
import edu.kit.informatik.studyplan.server.model.userdata.User;

/************************************************************/
/**
 * Ein konkretes UserDao, welches die Datenbankverbindung Ã¼ber Hibernate
 * herstellt.
 */
class HibernateUserDao implements UserDao {
	
	@Deprecated
	private Session session;
	@Deprecated
	private boolean independet;
	
	@Deprecated
	HibernateUserDao(AuthorizationContext authorizationContext) {
		if (authorizationContext != null) {
			session = ((SecurityProvider) authorizationContext.getProvider()).getSession();
		} else {
			session = HibernateUtil.getUserDataSessionFactory().openSession();
			independet = true;
		}
	}
	
	HibernateUserDao() {
		// TODO Auto-generated constructor stub
	}
	
	@Override
	public void deleteUser(User user) {
		Session session = HibernateUtil.getUserDataSessionFactory().getCurrentSession();
		session.beginTransaction();
		session.delete(user);
		session.getTransaction().commit();
	}

	@Override
	public void updateUser(User user) {
		Session session = HibernateUtil.getUserDataSessionFactory().getCurrentSession();
		session.beginTransaction();
		session.saveOrUpdate(user);
		session.getTransaction().commit();
	}

	@Override
	public User getUserByName(String name) {
		Session session = HibernateUtil.getUserDataSessionFactory().getCurrentSession();
		session.beginTransaction();
		User user = session.bySimpleNaturalId(User.class).load(name);
		session.getTransaction().commit();
		return user;
	}

	@Override
	@Deprecated
	public void cleanUp() {
		if (independet) {
			session.close();
		}
	}

};
